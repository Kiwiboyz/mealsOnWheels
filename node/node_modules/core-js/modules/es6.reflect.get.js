// 26.1.6 Reflect.get(target, propertyKey [, receiver])
<<<<<<< HEAD
var gOPD           = require('./_object-gopd')
  , getPrototypeOf = require('./_object-gpo')
  , has            = require('./_has')
  , $export        = require('./_export')
  , isObject       = require('./_is-object')
  , anObject       = require('./_an-object');
=======
var $        = require('./$')
  , has      = require('./$.has')
  , $export  = require('./$.export')
  , isObject = require('./$.is-object')
  , anObject = require('./$.an-object');
>>>>>>> a7c3d10f911c4d9db71c2a3c5b34c480919b989d

function get(target, propertyKey/*, receiver*/){
  var receiver = arguments.length < 3 ? target : arguments[2]
    , desc, proto;
  if(anObject(target) === receiver)return target[propertyKey];
<<<<<<< HEAD
  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
=======
  if(desc = $.getDesc(target, propertyKey))return has(desc, 'value')
>>>>>>> a7c3d10f911c4d9db71c2a3c5b34c480919b989d
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
<<<<<<< HEAD
  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
=======
  if(isObject(proto = $.getProto(target)))return get(proto, propertyKey, receiver);
>>>>>>> a7c3d10f911c4d9db71c2a3c5b34c480919b989d
}

$export($export.S, 'Reflect', {get: get});